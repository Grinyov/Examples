package inheritance;

/**
 * Created by green on 21.07.2015.
 *
 * Для статических методов принципы «позднего связывания» не использу-
 ются. Динамический полиморфизм к статическим методам класса неприме-
 ним, так как обращение к статическому атрибуту или методу осуществляется
 по типу ссылки, а не по типу объекта, через который производится обраще-
 ние. Версия вызываемого статического метода всегда определяется на этапе
 компиляции. При использовании ссылки для доступа к статическому члену
 компилятор при выборе метода учитывает тип ссылки, а не тип объекта, ей
 присвоенного
 */
public class RunnerStatic {
    public static void main(String[ ] args) {
        BaseStatic ob = new SubStatic(); // !!!
        // нестатический вызов статического метода
        ob.go(); // предупреждение компилятора о некорректном вызове
    }
}
/*
При таком способе инициализации объекта ob метод go() будет вызван
из класса Base. Если же спецификатор static убрать из объявления методов,
то вызов необходимо осуществлять в соответствии с принципами полиморфизма.
Статические методы всегда следует вызывать через имя класса, в котором
они объявлены, а именно:
Base.go();
Sub.go();
Вызов статических методов через объект считается нетипичным и наруша-
ющим смысл статического определения.
 */