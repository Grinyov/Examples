package inheritance;

/**
 * Created by green on 21.07.2015.
 *
 * Использование аннотации @Override позволяет выделить в коде переопре-
 деленный метод и сгенерирует ошибку компиляции в случае, если програм-
 мист допустит грамматическую ошибку (опечатку) в описании сигнатуры по-
 лиморфного метода.
 Следует помнить, что при вызове toString() обращение super всегда проис-
 ходит к ближайшему суперклассу. Переадресовать вызов, минуя суперкласс,
 невозможно! Аналогично при вызове super() в конструкторе обращение про-
 исходит к соответствующему конструктору непосредственного суперкласса.
 Основной вывод: выбор версии переопределенного метода производит-
 ся на этапе выполнения кода.
 Все методы Java являются виртуальными (ключевое слово virtual, как в C++,
 не используется).
 Статические методы можно перегружать и «переопределять» в подклассах,
 но их доступность всегда зависит от типа ссылки и атрибута доступа, и никог-
 да — от типа самого объекта
 */
public class Runner {
    public static void main(String[] args) {
        PointReport d = new PointReport();
        Point1Dv2 p1 = new Point1Dv2(-7);
        d.printReport(p1);
        Point2Dv2 p2 = new Point2Dv2(3, 4);
        d.printReport(p2);
        Point3Dv2 p3 = new Point3Dv2(3, 4, 5);
        d.printReport(p3);
    }
}
