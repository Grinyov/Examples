package inheritance;

/**
 * Created by green on 21.07.2015.
 *
 * »спользование аннотации @Override позвол€ет выделить в коде переопре-
 деленный метод и сгенерирует ошибку компил€ции в случае, если програм-
 мист допустит грамматическую ошибку (опечатку) в описании сигнатуры по-
 лиморфного метода.
 —ледует помнить, что при вызове toString() обращение super всегда проис-
 ходит к ближайшему суперклассу. ѕереадресовать вызов, мину€ суперкласс,
 невозможно! јналогично при вызове super() в конструкторе обращение про-
 исходит к соответствующему конструктору непосредственного суперкласса.
 ќсновной вывод: выбор версии переопределенного метода производит-
 с€ на этапе выполнени€ кода.
 ¬се методы Java €вл€ютс€ виртуальными (ключевое слово virtual, как в C++,
 не используетс€).
 —татические методы можно перегружать и Ђпереопредел€тьї в подклассах,
 но их доступность всегда зависит от типа ссылки и атрибута доступа, и никог-
 да Ч от типа самого объекта
 */
public class Runner {
    public static void main(String[] args) {
        PointReport d = new PointReport();
        Point1Dv2 p1 = new Point1Dv2(-7);
        d.printReport(p1);
        Point2Dv2 p2 = new Point2Dv2(3, 4);
        d.printReport(p2);
        Point3Dv2 p3 = new Point3Dv2(3, 4, 5);
        d.printReport(p3);
    }
}
