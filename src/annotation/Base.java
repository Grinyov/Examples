package annotation;

/**
 * Created by green on 27.07.2015.
 *
 * Данная аннотация помечает класс Base. За именем аннотации, начинаю-
 щимся с символа @, следует заключенный в круглые скобки список инициали-
 зирующих значений для методов-членов. Для того, чтобы передать значение
 методу-члену, имени этого метода присваивается значение. Таким образом,
 в приведенном фрагменте строка "SELECT * FROM phonebook" присваива-
 ется методу sqlRequest(), члену аннотации типа BaseAction. При этом в опера-
 ции присваивания после имени sqlRequest нет круглых скобок. Когда методу-
 члену передается инициализирующее значение, используется только имя мето-
 да. Следовательно, в данном контексте методы-члены выглядят как поля.
 *
 */
@BaseAction (
        level = 2,
        sqlRequest = "SELECT * FROM phonebook"
)
public class Base {
    public void doAction() {
        Class<Base> f = Base.class;
        BaseAction a = (BaseAction)f.getAnnotation(BaseAction.class);
        System.out.println(a.level());
        System.out.println(a.sqlRequest());
    }
}

/*
Реализация обработки аннотации, приведенная в методе doAction() класса
Base, крайне примитивна. Разработчику каждый раз при использовании анно-
таций придется писать код по извлечению значений полей-членов и реакцию
метода, класса и поля на значение аннотации. Необходимо привести реализа-
цию аннотации таким образом, чтобы программисту достаточно было только
аннотировать класс, метод или поле и передать нужное значение. Реакция сис-
темы на аннотацию должна быть автоматической.
 */